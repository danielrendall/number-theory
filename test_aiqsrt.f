      PROGRAM TESTAIQSRT
      INTEGER SIZE
C CAN'T SORT ARRAYS BIGGER THAN THIS DUE TO MEMORY CONSTRAINTS
C ALSO, THIS SEEMS A BIT RANDOM; SOMETIMES 15670 WORKS
      SIZE=15669
      CALL ALSAME(1)
      CALL SORTED(2)
      CALL REVERSE(3)
      CALL PALN1(4)
      CALL PALN2(5)
      CALL PALN3(6)
      CALL PALN4(7)
      CALL PALN10(8)
      CALL RAND1(9, SIZE)
      CALL RAND2(10, SIZE)
      CALL RAND3(11, SIZE)
      END

      SUBROUTINE ALSAME(T)
      INTEGER T, ARRAY(10)
      DO 10 I=1,10
      ARRAY(I) = 7
10    CONTINUE
      CALL AIQSRT(ARRAY, 10)
      CALL IXPECT(T, 1, ARRAY(1), 7)
      CALL IXPECT(T, 2, ARRAY(5), 7)
      CALL IXPECT(T, 3, ARRAY(10), 7)
      END

      SUBROUTINE SORTED(T)
      INTEGER T, ARRAY(10)
      DO 20 I=1,10
      ARRAY(I) = I
20    CONTINUE
      CALL AIQSRT(ARRAY, 10)
      CALL IXPECT(T, 1, ARRAY(1), 1)
      CALL IXPECT(T, 2, ARRAY(3), 3)
      CALL IXPECT(T, 3, ARRAY(5), 5)
      CALL IXPECT(T, 4, ARRAY(7), 7)
      CALL IXPECT(T, 5, ARRAY(10), 10)
      END

      SUBROUTINE REVERSE(T)
      INTEGER T, ARRAY(10)
      DO 30 I=1,10
      ARRAY(11 - I) = I
30    CONTINUE
      CALL AIQSRT(ARRAY, 10)
      CALL IXPECT(T, 1, ARRAY(1), 1)
      CALL IXPECT(T, 2, ARRAY(3), 3)
      CALL IXPECT(T, 3, ARRAY(5), 5)
      CALL IXPECT(T, 4, ARRAY(7), 7)
      CALL IXPECT(T, 5, ARRAY(10), 10)
      END

      SUBROUTINE PALN1(T)
      INTEGER T, ARRAY(1)
      ARRAY(1) = 1
      CALL IXPECT(T, 1, ARRAY(1), 1)
      CALL AIQSRT(ARRAY, 1)
      CALL IXPECT(T, 2, ARRAY(1), 1)
      END

      SUBROUTINE PALN2(T)
      INTEGER T, ARRAY(2)
      ARRAY(1) = 1
      ARRAY(2) = 1
      CALL IXPECT(T, 1, ARRAY(1), 1)
      CALL AIQSRT(ARRAY, 2)
      CALL IXPECT(T, 2, ARRAY(1), 1)
      CALL IXPECT(T, 3, ARRAY(2), 1)
      END

      SUBROUTINE PALN3(T)
      INTEGER T, ARRAY(3)
      ARRAY(1) = 1
      ARRAY(2) = 2
      ARRAY(3) = 1
      CALL IXPECT(T, 1, ARRAY(1), 1)
      CALL AIQSRT(ARRAY, 3)
      CALL IXPECT(T, 2, ARRAY(1), 1)
      CALL IXPECT(T, 3, ARRAY(2), 1)
      CALL IXPECT(T, 4, ARRAY(3), 2)
      END

      SUBROUTINE PALN4(T)
      INTEGER T, ARRAY(4)
      ARRAY(1) = 1
      ARRAY(2) = 2
      ARRAY(3) = 2
      ARRAY(4) = 1
      CALL IXPECT(T, 1, ARRAY(1), 1)
      CALL AIQSRT(ARRAY, 4)
      CALL IXPECT(T, 2, ARRAY(1), 1)
      CALL IXPECT(T, 3, ARRAY(2), 1)
      CALL IXPECT(T, 4, ARRAY(3), 2)
      CALL IXPECT(T, 5, ARRAY(4), 2)
      END

      SUBROUTINE PALN10(T)
      INTEGER T, ARRAY(10)
      DO 30 I=1,5
      ARRAY(I) = I
      ARRAY(11 - I) = I
30    CONTINUE
      CALL IXPECT(T, 1, ARRAY(3), 3)
      CALL IXPECT(T, 2, ARRAY(8), 3)
      CALL AIQSRT(ARRAY, 10)
      CALL IXPECT(T, 3, ARRAY(1), 1)
      CALL IXPECT(T, 4, ARRAY(2), 1)
      CALL IXPECT(T, 5, ARRAY(3), 2)
      CALL IXPECT(T, 6, ARRAY(4), 2)
      CALL IXPECT(T, 7, ARRAY(5), 3)
      CALL IXPECT(T, 8, ARRAY(6), 3)
      CALL IXPECT(T, 9, ARRAY(7), 4)
      CALL IXPECT(T, 10, ARRAY(8), 4)
      CALL IXPECT(T, 11, ARRAY(9), 5)
      CALL IXPECT(T, 12, ARRAY(10), 5)
      END

      SUBROUTINE RAND1(T, SIZE)
      INTEGER T, SIZE, ARRAY(SIZE), LFSR1
      LOGICAL SORTDP
      DO 100 I=1,SIZE
      ARRAY(I) = LFSR1()
100   CONTINUE
      CALL LXPECT(T, 1, SORTDP(ARRAY, SIZE), .FALSE.)
      CALL AIQSRT(ARRAY, SIZE)
      CALL LXPECT(T, 2, SORTDP(ARRAY, SIZE), .TRUE.)
      END

      SUBROUTINE RAND2(T, SIZE)
      INTEGER T, SIZE, ARRAY(SIZE), LFSR1
      LOGICAL SORTDP
      DO 200 I=1,SIZE
      ARRAY(I) = LFSR2()
200   CONTINUE
      CALL LXPECT(T, 1, SORTDP(ARRAY, SIZE), .FALSE.)
      CALL AIQSRT(ARRAY, SIZE)
      CALL LXPECT(T, 2, SORTDP(ARRAY, SIZE), .TRUE.)
      END

      SUBROUTINE RAND3(T, SIZE)
      INTEGER T, SIZE, ARRAY(SIZE), LFSR1
      LOGICAL SORTDP
      DO 300 I=1,SIZE
      ARRAY(I) = LFSR3()
300   CONTINUE
      CALL LXPECT(T, 1, SORTDP(ARRAY, SIZE), .FALSE.)
      CALL AIQSRT(ARRAY, SIZE)
      CALL LXPECT(T, 2, SORTDP(ARRAY, SIZE), .TRUE.)
      END
      
