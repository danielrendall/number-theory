      PROGRAM PROBLEM6
      CALL P6RUN(3)
      CALL P6RUN(5)
      CALL P6RUN(7)
      CALL P6RUN(11)
      CALL P6RUN(17)
      CALL P6RUN(29)
      CALL P6RUN(61)
      END

      SUBROUTINE P6RUN(PRIME)
      INTEGER PRIME
      INTEGER RES1(PRIME), RES2(PRIME)
      INTEGER M1, M2, QUARES, QUAR2, I
      LOGICAL AIEQ
      PRINT *,"PROCESSNG", PRIME
      CALL AIZERO(RES1, PRIME)
      CALL AIZERO(RES2, PRIME)
      M1 = QUARES(PRIME, RES1)
      M2 = QUAR2(PRIME, RES2)
      IF (M1 .EQ. M2) GOTO 10
      PRINT *, M1, "NE", M2
      GOTO 90
10    CALL AIQSRT(RES1, M1)
      CALL AIQSRT(RES2, M2)
      IF (AIEQ(RES1, RES2, M1)) GOTO 20
      PRINT *, "ARRAYS DO NOT MATCH"
      GOTO 90
20    CALL AIDUMP(RES1, M1)
90    END

C A NUMBER N IS A QUADRATIC RESIDUE MODULO P IF P DND N AND THERE IS
C A NUMBER M (1 <= M < PRIME) SUCH THAT PRIME DIVIDES M^2 - N
      INTEGER FUNCTION QUARES(PRIME, RES)
      INTEGER PRIME, RES(*)
C NUMBER TO TEST FOR BEING A QUADRATIC RESIDUE
      INTEGER N
      INTEGER I
      LOGICAL QURESP
      I = 0
      DO 100 N=1,PRIME-1
      IF (.NOT. QURESP(N, PRIME)) GOTO 100
      I = I + 1
      RES(I) = N
100   CONTINUE
      QUARES = I
      END
   

      LOGICAL FUNCTION QURESP(N, P)
      INTEGER N, P, M
      LOGICAL DIVIDP
      QURESP = .FALSE.
      M = 1
200   IF (DIVIDP(M*M - N, P)) GOTO 210
      M = M + 1
      IF (M .EQ. P) GOTO 220
      GOTO 200
210   QURESP = .TRUE.
220   END
      

C A NUMBER N IS A QUADRATIC RESIDUE MODULO P IF P DND N AND THERE IS
C A NUMBER M (1 <= M < PRIME) SUCH THAT PRIME DIVIDES M^2 - N
      INTEGER FUNCTION QUAR2(PRIME, RES)
      INTEGER PRIME, RES(*)
      INTEGER N
      INTEGER AIDDUP
      DO 300 N=1,PRIME-1
      RES(N) = MOD(N * N, PRIME)
300    CONTINUE
      QUAR2 = AIDDUP(RES, PRIME - 1)
      END
