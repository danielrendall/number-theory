      PROGRAM PROBLEM8
      INTEGER I, RES, WAYS
      DO 10 I=1,30
      RES = WAYS(I)
      PRINT *, I, RES
10    CONTINUE
      END

C CALCULATE THE NUMBER OF WAYSOF MAKING THE TARGET AS A SUM OF DISTINCT
C INTEGERS ALL LESS THAN OR EQUAL TO THE TARGET
      INTEGER FUNCTION WAYS(TARGET)
      INTEGER TARGET
      INTEGER WAYS1
C HIGHEST NUMBER IN THE SUM 
      INTEGER H
      WAYS = 0
      DO 20 H=TARGET,1, -1
      WAYS = WAYS + WAYS1(TARGET, H)
20    CONTINUE      
      END

C CALCULATE THE NUMBER OF WAYSOF MAKING THE TARGET AS A SUM OF DISTINCT
C INTEGERS WHERE THE HIGHEST INTEGER IN THE SUM IS H
      INTEGER FUNCTION WAYS1(TARGET, H)
      INTEGER TARGET
      INTEGER BVAL
      LOGICAL ISSUM
C HIGHEST NUMBER IN THE SUM 
      INTEGER H
C THE BITS SET IN THIS CORRESPOND TO NUMBERS CHOSEN FOR THE SUM, WITH 
C THE MSB CORRESPONDING TO THE TARGET, THE LSB CORRESPONDING TO 1.
C WE SET THE BIT CORRESPONDING TO H, THE HIGHEST NUMBER TO BE USED.
C WE CAN THEN WORK OUT WHAT SINGLE NUMBER WOULD ADD TO H TO GIVE THE
C TARGET, SET THAT, AND CONCLUDE THAT THE NEW NUMBER REPRESENTS AN
C UPPER BOUND ON THE COMBINATIONS TO BE CONSIDERED AS ANY HIGHER 
C NUMBER WOULD NECESSARILY OVERSHOOT THE TARGET.
      LOGICAL BITS(TARGET)
C THE VALUE OF BITS (TREATED AS A BINARY NUMBER) CORRESPONDING TO 
C HAVING JUST BIT H SET. ALL OTHER COMBINATIONS ARE BIGGER THAN THIS
      INTEGER BASE
C HIGHEST POSSIBLE OTHER INTEGER IN THE SUM
      INTEGER NH
C THE HIGHEST BINARY VALUE OF BITS THAT CORRESPONDS TO INTEGERS THAT
C COULD PLAUSIBLY SUM TO THE TARGET
      INTEGER CUTOFF
C BINARY VALUE BEING TESTED (PATTERN)
      INTEGER PTRN
C LOOP VARIABLE
      INTEGER I
      WAYS1 = 0
      CALL AIZERO(BITS, TARGET)
      BITS(1 + TARGET - H) = .TRUE.
      BASE = BVAL(BITS, TARGET)
      NH = TARGET - H
C      PRINT *,"H", H, "NH", NH
      IF (NH .GT. 0) GOTO 30
C NEXT HIGHEST NUMBER IS 0, THEREFORE H = TARGET, AND THERE'S ONE WAY
C OF MAKING THE SUM
      WAYS1 = 1
C      PRINT *, "TARGET", TARGET, "BITS", BVAL(BITS, TARGET)
      GOTO 100
30    IF (NH .LT. H) GOTO 35
C NEXT HIGHEST NUMBER IS MORE THAN OR EQUAL TO H, WHICH MEANS WE NEED 
C TO ADD AT LEAST THREE NUMBERS TO HIT THE TARGET. WE CAN BOUND THE
C SEARCH AT THE NEXT POWER OF 2 MINUS 1
      DO 32, I=1,H
      BITS(1 + TARGET - I) = .TRUE.
32    CONTINUE
      GOTO 37
C BOUND THE SEARCH AT A VALUE THAT WHEN ADDED TO H GIVES THE TARGET
35    BITS(1 + TARGET - NH) = .TRUE.
37    CUTOFF = BVAL(BITS, TARGET)
      PTRN = BASE
C      PRINT *,"BASE", BASE, "CUTOFF", CUTOFF      
40    IF (PTRN .GT. CUTOFF) GOTO 100
      CALL ITOBIT(BITS, TARGET, PTRN)
      IF (ISSUM(BITS, TARGET)) WAYS1 = WAYS1 + 1
      PTRN = PTRN + 1
      GOTO 40
C100   PRINT *, "TARGET", TARGET, "H", H, "WAYS1", WAYS1
100   END

      LOGICAL FUNCTION ISSUM(BITS, TARGET)
      LOGICAL BITS(*)
      INTEGER TARGET
      INTEGER I
      INTEGER SUM
      INTEGER BVAL
      SUM = 0
      DO 110 I=1, TARGET 
      IF (BITS(TARGET + 1 - I)) SUM = SUM + I
110   CONTINUE
      ISSUM = (SUM .EQ. TARGET)
C      IF (ISSUM) PRINT *, "TARGET", TARGET, "BITS", BVAL(BITS, TARGET)
      END
