C FILL AN INTEGER ARRAY OF THE STATED SIZE WITH THE GIVEN VALUE
      SUBROUTINE AIFILL(ARRAY, SIZE, VAL)
      INTEGER ARRAY(*), SIZE, VAL
      DO 10 I=1,SIZE
      ARRAY(I) = VAL
10    CONTINUE
      END

C INITIALIZE AN INTEGER ARRAY OF THE STATED SIZE WITH ZERO
      SUBROUTINE AIZERO(ARRAY, SIZE)
      INTEGER ARRAY(*), SIZE
      CALL AIFILL(ARRAY, SIZE, 0)
      END

C RETURN TRUE IF THE INTEGER ARRAY OF THE STATED SIZE CONTAINS THE
C GIVEN VALUE
      LOGICAL FUNCTION AICONT(ARRAY, SIZE, VAL)
      INTEGER ARRAY(*), SIZE, VAL, I
      AICONT = .FALSE.
      I=1
20    IF (I .GT. SIZE) GOTO 40
      IF (ARRAY(I) .EQ. VAL) GOTO 30
      I = I + 1
      GOTO 20
30    AICONT = .TRUE.
40    RETURN
      END

C RETURN TRUE IF THE SORTED INTEGER ARRAY OF THE STATED SIZE 
C CONTAINS THE GIVEN VALUE. NOTE THAT WE NEED TO BE CAREFUL
C WHEN THE MIDPOINT OF THE BINARY SEARCH ENDS UP EQUAL TO ONE
C OF THE ENDPOINTS. WE CHECK WHETHER THE DIFFERENCE IS LESS
C THAN OR EQUAL TO 1.
      LOGICAL FUNCTION AICONS(ARRAY, SIZE, VAL)
      INTEGER ARRAY(*), SIZE, VAL, I, FIRST, LAST, MID
      AICONS = .FALSE.
      FIRST = 1
      LAST = SIZE
50    IF (LAST - FIRST .LE.1) GOTO 80
      MID = (FIRST + LAST) / 2
      IF (ARRAY(MID) - VAL) 60, 90, 70
60    FIRST = MID
      GOTO 50
70    LAST = MID
      GOTO 50
80    IF ((ARRAY(FIRST) .NE. VAL) .AND. (ARRAY(LAST) .NE. VAL)) GOTO 100
90    AICONS = .TRUE.
100   RETURN
      END

C MOVE ALL DUPLICATE ENTRIES IN THE ARRAY UP TO THE HIGHEST INDEXES AND
C RETURN THE INDEX OF THE HIGHEST UNIQUE ENTRY. NOTE THAT THIS MODIFIES
C THE SUPPLIED ARRAY AND RETURNS A RESULT
      INTEGER FUNCTION AIDDUP(ARRAY, SIZE)
      INTEGER ARRAY(*), SIZE, I, J, K, VAL, M, N
C I STARTS AT 1 AND POINTS AT THE INDEX OF THE VALUE BEING TESTED FOR
C BEING A DUPLICATE. VAL IS THE VALUE AT INDEX I. J STARTS AT SIZE AND
C IS THE CURRENT SIZE OF THE UNIQUE PART OF THE ARRAY. EVERY TIME WE 
C HIT A DUPLICATE, IT GETS SWAPPED WITH THE VALUE AT J, AND J IS 
C DECREASED. K IS OUR CURRENT TEST INDEX
      I = 1
      J = SIZE
110   IF (J .EQ. I) GOTO 170
      VAL = ARRAY(I)
      K = I+1
120   M = ARRAY(K)
      IF (M .NE. VAL) GOTO 130
      N = ARRAY(J)
      ARRAY(J) = M
      ARRAY(K) = N
      J = J - 1
      GOTO 110   
130   K = K + 1
      IF (K .GT. J) GOTO 150
      GOTO 120
150   I = I+1
      GOTO 110
170   AIDDUP = J
      END
      
